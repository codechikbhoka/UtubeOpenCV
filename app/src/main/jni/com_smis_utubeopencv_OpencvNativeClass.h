/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include <stdio.h>
#include <iostream>
#include <cstring>
#include <opencv2/opencv.hpp>


/* Header for class com_smis_utubeopencv_OpencvNativeClass */

#ifndef _Included_com_smis_utubeopencv_OpencvNativeClass
#define _Included_com_smis_utubeopencv_OpencvNativeClass
#ifdef __cplusplus
extern "C" {
#endif


#define  MAX_NUM_GAUSSIAN 100

int toGray (cv::Mat img, cv::Mat& gray);
bool LoadSkinColorProbTable();
bool LoadFile(char const* filename);
bool AddGaussian(cv::Mat& mean_mat, cv::Mat& cov_mat, float weight);
bool SaveLookUpTable(char const* filename);
bool LoadLookUpTable(char const* filename);
void MakeLookUpTable(bool skin);
float  GetProbability(cv::Mat sample);
float GetProbabilityByLookUp(bool skin, int R, int G, int B);
cv::Mat GetHandRegion(cv::Mat& src_img);

int n_mixture;
int n_dim;
float weight[MAX_NUM_GAUSSIAN];
cv::Mat imgSegmented;
cv::Mat p_image_gradient;
cv::Mat p_image_hand_mask;
cv::Mat mean_mat[MAX_NUM_GAUSSIAN];
cv::Mat cov_mat[MAX_NUM_GAUSSIAN];
cv::Mat cov_matI[MAX_NUM_GAUSSIAN];

char* filenameLookUpTableSkin = "/handy/skin.dis";
const char* filenameLookUpTableNonSkin = "/handy/nonskin.dis";
const char* filenameMgmSkin = "/handy/skin.mgm";
const char* filenameMgmNonSkin = "/handy/nonskin.mgm";
float probabilitySkin[256][256][256];
float probabilityNonSkin[256][256][256];

JNIEXPORT jint JNICALL Java_com_smis_utubeopencv_OpencvNativeClass_convertGray
  (JNIEnv *, jclass, jlong, jlong);

JNIEXPORT jboolean JNICALL Java_com_smis_utubeopencv_OpencvNativeClass_initialise(JNIEnv *, jclass, jstring absPath);

JNIEXPORT jint JNICALL Java_com_smis_utubeopencv_OpencvNativeClass_getHandRegion
        (JNIEnv *, jclass, jlong, jlong);

#ifdef __cplusplus
}
#endif
#endif
